$actionColor: #fff;

.root {
  @media (hover: none) {
    display: none;
  }

  .pointerActions {
    z-index: 999;
    pointer-events: none;
    position: relative;

    .action {
      position: fixed;
      top: 0;
      left: 0;
      transform: translate(49vw, 49vh);

      div {
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        transition: all .3s 0s ease;
      }
    }

    .hidden {
      opacity: 0;

      &.visible {
        opacity: 1;
      }
    }

    .circle {
      // opacity: 0.5;

      div {
        margin: -17px 0 0 -17px;
        width: 35px;
        height: 35px;
        border: 1px solid $actionColor;
      }

      &.link div {
        margin: -13px 0 0 -13px;
        width: 26px;
        height: 26px;
        background: $actionColor;
      }

      &.button div {
        margin: -23px 0 0 -23px;
        width: 46px;
        height: 46px;
        background: $actionColor;
      }

      &.input div {
        opacity: 0;
      }
    }

    .point {
      div {
        margin: -3px 0 0 -3px;
        width: 7px;
        height: 7px;
        background: $actionColor;
      }

      &.dragging div {
        opacity: 0;
      }

      &.link div {
        opacity: 0;
      }

      &.button div {
        opacity: 0;
      }

      &.input div {
        opacity: 0;
      }
    }

    .drag {
      // outline: 1px solid;
      position: fixed;
      top: 0;
      left: 0;
      transform: translate(49vw, 49vh);
      margin: -2px 0 0 -47px;
      width: 95px;
      height: 4px;
      display: flex;
      align-items: center;
      justify-content: space-between;

      &:before,
      &:after {
        content: '';
        width: 8px;
        height: 8px;
        border: 1px solid;
        transform: rotate(45deg);
      }

      &:before {
        border-color: transparent transparent #fff #fff;
      }

      &:after {
        border-color: #fff #fff transparent transparent;
      }
    }
  }

  .blendedMode {
    mix-blend-mode: difference;
  }
}